<?php 
Controllers
https://laravel.com/docs/6.x/controllers
---------------------------------------------------------------------

Curso Laravel. Controllers I Controladores. Vídeo 7
https://www.youtube.com/watch?v=PqFGnXCJl1E&list=PLU8oAlHdN5Bk-qkvjER90g2c_jVmpAHBh&index=7
Cómo crear controladores de forma manual.


Es posible hacer subdirectorios para organizar los controladores (asi como el directorio Auth)
../app/Http/Controllers

namespace se usa para no crear conflicto con otras clases, metodos, o variables que puedan ir creando los usuarios ya que una de las principales caracteristicas del Framework Laravel es que permite trabajar en equipo, entonces puede ser frecuente que alguien cree una funcion con un nombre que ya exista (creada por otro miembro del equipo).
namespace es como un directorio en un sistema operativo, en donde puede crearse clases, metodos, variables, etc. Y eso se hace para que estos no colisionen con otros.

Un controlador se puede crear de forma manual o por la terminal


class PostsController extends Controller
{   
    public function inicio()
    {
        return "Estas en el inicio del sitio";
    }
}


Create a controller
$ php artisan make:controller <Controller's name>
Example 1.1: $ php artisan make:controller ServiceController

Example 1.2: to create a model including his controller and his migration:
	$ php artisan make:model Customer -c -m  
or:
	$ php artisan make:model Customer -cm 
	
	Model created successfully.
	Created Migration: 2020_01_07_093505_create_customers_table
	Controller created successfully.

Example 1.3: generate a will contain a method for each of the available resource operations. (methods create, edit, etc)
	$ php artisan make:controller PhotoController --resource

---------------------------------------------------------------------
Laravel. Controllers II Controladores. Vídeo 8
https://www.youtube.com/watch?v=g6uCxmXsUZ4&list=PLU8oAlHdN5Bk-qkvjER90g2c_jVmpAHBh&index=8

Cómo crear controllers desde la consola.

$ php artisan make:controller <Controller's name>

---------------------------------------------------------------------
Laravel. Controllers III Controladores. Vídeo 9
https://www.youtube.com/watch?v=RbC_u4jOaZI&list=PLU8oAlHdN5Bk-qkvjER90g2c_jVmpAHBh&index=9
Cómo pasar parámetros a controllers y cómo crear la estructura de un sitio web.

Ejemplo 1:

# Route
Route::get('/inicio/{id}', 'ExampleController@index');

# Controller
class ExampleController extends Controller
{   
    public function inicio($id)
    {
        return "Estas en el inicio del sitio y el valor pasado por parametro es: ". $id;
    }
}


Ejemplo 2: Crear una estructura general de un sitio web usando controladores

$ php artisan make:controller PaginasController

# Controller
class PaginasController extends Controller
{   
    public function inicio()
    {
        return view ('welcome');
    }

    public function quienessomos()
    {
        return view ('quienessomos');
    }

    public function dondeestamos()
    {
        return view ('dondeestamos');
    }

    public function foro()
    {
        return view ('foro');
    }
}

# Route
Route::get('/', 'PaginasController@inicio');
Route::get('/inicio', 'PaginasController@inicio');
Route::get('/quienessomos', 'PaginasController@quienessomos');
Route::get('/dondeestamos', 'PaginasController@dondeestamos');
Route::get('/foros', 'PaginasController@foro');

Y hacer las vistas: quienessomos.blade.php, dondeestamos.blade.php y foro.blade.php

---------------------------------------------------------------------
Curso Laravel. Controllers IV (Controladores). Vídeo 10
https://www.youtube.com/watch?v=E0Y09v05RAk&list=PLU8oAlHdN5Bk-qkvjER90g2c_jVmpAHBh&index=10

https://laravel.com/docs/6.x/controllers#restful-partial-resource-routes
Partial Resource Routes

Cómo generar rutas para utilizar controladores generados con  el comando php make artisan controller con recursos.

Otra forma de crear la estructura de un sitio, es creando una ruta y accediendo a todos los recursos de un cotrolador, ejemplo:

    # Route
    Route::resource('posts','PostsController');

Y ahora observe el resultado del comando 
    $ php artisan route:list
+--------+-----------+------------------------+------------------+------------------------------------------------------------------------+--------------+
| Domain | Method    | URI                    | Name             | Action                                                                 | Middleware   |
+--------+-----------+------------------------+------------------+------------------------------------------------------------------------+--------------+

|        | POST      | posts                  | posts.store      | App\Http\Controllers\PostsController@store                             | web,auth     |
|        | GET|HEAD  | posts                  | posts.index      | App\Http\Controllers\PostsController@index                             | web          |
|        | GET|HEAD  | posts/create           | posts.create     | App\Http\Controllers\PostsController@create                            | web,auth     |
|        | GET|HEAD  | posts/{post}           | posts.show       | App\Http\Controllers\PostsController@show                              | web          |
|        | PUT|PATCH | posts/{post}           | posts.update     | App\Http\Controllers\PostsController@update                            | web,auth     |
|        | DELETE    | posts/{post}           | posts.destroy    | App\Http\Controllers\PostsController@destroy                           | web,auth     |
|        | GET|HEAD  | posts/{post}/edit      | posts.edit       | App\Http\Controllers\PostsController@edit                              | web,auth     |

    
# Controller
class PostsControllerController extends Controller
{   
    public function create()
    {   # Si en el navegador se escribe la URL posts/create 
        return "Estas en el metodo create";
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id) # observa que hay un parametro
    {   # y que la URL sera posts/{post}/edit

        $post = Post::find($id);

        //Ckeck for correct user
        if (auth()->user()->id !== $post->user_id) {
            return redirect('/posts')->with('error', 'Unauthorized page');
        }
        view('posts.edit')->with('post', $post);
}
