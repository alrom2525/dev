<?php

	->Naming convention
	Singular: Model (1 row in our table)
		is going to be the singular Example: Service (UPPER CASE)
	Singular: Controller name MUST start with a noun (in singular form) followed by the word “Controller”.
		Ex: ArticleController

	Plural: Table (all rows in our table)
		is going to be be the plural Example: services (lower case)

Pasos para crear tablas en BBDD Laravel:
	0. Fast method: see item 1.2 Create a model including his controller and his migration
	1. Crear un archivo migration
	2. Configurar o editar ese archivo
	3. Ejecutar el comando php artisan migrate

1. Crear un archivo migration
	Sintaxis:
	$ php artisan make:migration <NamaFileMigrations create_tableNameInPlural_table> --create="tableNameInPlural" 
	
	Examples:
	$ php artisan make:migration create_posts_table --create="posts"

	$ php artisan make:migration add_user_id_to_post --table="posts"

		file database\migrations\2020_01_01_010118_add_user_id_to_post.php
	  
	1.1 Add a table in our database (create a model) 
	$ php artisan make:model Profile -m
	$ php artisan make:model Post -m

	1.2 Create a model including his controller and his migration:
	$ php artisan make:model Customer -c --resource -m

2. Configurar o editar ese archivo
	https://laravel.com/docs/6.x/migrations#columns (tipos de datos)
	$table->bigIncrements('id');
	$table->integer('user_id');
	$table->tinyInteger('status')->default('1');
    $table->decimal('amount', 8, 2);
    $table->float('amount', 8, 2);
    
    $table->string('name');
    $table->char('name', 100);
    $table->string('email')->unique();
    $table->text('notes');
    $table->string('email')->index();
    $table->longText('payload');
    $table->mediumText('body');

    $table->date('birthdate');
    $table->timestamp('email_verified_at')->nullable();
    
	$table->boolean('confirmed');

3. Ejecutar el comando php artisan migrate
	$ php artisan migrate

4. Crear las relaciones, ejemplo si es una relacion RELACION UNO a VARIOS tambien hay 
   que hacer la relacion inversa para poder consultar en ambos sentidos
   https://laravel.com/docs/6.x/eloquent-relationships

   Nota: revisar el archivo BDD Eloquent relationships

Comandos adicionales respecto a migrate:
a) Vuelve un paso atras de una migracion (equivalente a un CTRL-Z deshacer)
	$ php artisan migrate:rollback

b) Hace un rollback de todo lo que se haya hecho y luego hace una nueva migracion, es decir elimina todas las tablas y las vuelve a crear.
	$ php artisan migrate:refresh 

	->Delete all tables and recreates all tables:
	$ php artisan migrate:fresh

c) Verifica si un archivo migration se ha ejecutado o no, esto se usa en caso que nuestro poryecto sea muy grande y que ya no recordemos a exactitud si hemos ejecutado cierto archivo migration.
	$ php artisan migrate:status

d) Borra TODAS las tablas de la base de datos (equivalente drop table)
	$ php artisan migrate:reset
